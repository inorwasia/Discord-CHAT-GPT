import { Configuration, OpenAIApi } from "openai";

class ChatGPT {
  /**
   *
   * @param {import("./types").ChatGPTOptions} options
   */
  constructor(options) {
    this.apiKey = options.apiKey;
    this.configuration = new Configuration({
      apiKey: this.apiKey,
    });
    this.openai = new OpenAIApi(this.configuration);
  }

  async chat(content, requester) {
    if (!content || !requester) {
      throw new Error("Content and requester cannot be null or undefined");
    }

    try {
      let response = await this.openai.createChatCompletion({
        model: "gpt-3.5-turbo-0301",
        messages: [
          {
            role: "user",
            content: content,
            name: requester,
          },
        ],
      });
      let message = response.data.choices.at(0).message.content;
      return message;
    } catch (error) {
      throw new Error(`Failed to complete API call: ${error.message}`);
    }
  }
}

export { ChatGPT };
